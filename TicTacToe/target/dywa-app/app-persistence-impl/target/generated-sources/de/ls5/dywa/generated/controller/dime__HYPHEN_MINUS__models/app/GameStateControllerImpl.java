/* generated by info.scce.dime.generator.scheme.ControllerGenerator */
package de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app;

import de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.GameState;
import de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.GameStateEntity;

import java.util.Arrays;
import java.util.stream.Collectors;

@javax.enterprise.context.RequestScoped
public class GameStateControllerImpl implements GameStateController {
	private static final org.slf4j.Logger LOGGER =  org.slf4j.LoggerFactory.getLogger(GameStateController.class);

	@javax.persistence.PersistenceContext
	private javax.persistence.EntityManager entityManager;

	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController domainFileController;

@javax.inject.Inject //referenceMap
private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.TableController tableController;

@javax.inject.Inject //referenceMap
private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.GameStateController gameStateController;

    
    @Override
	public GameState read(final java.lang.Long id) {

		GameStateEntity result = entityManager.find(GameStateEntity.class, id);
		if (result != null) {
			return GameState.valueOf(result.getDywaName());
		}
		return GameState.forId(id);
	}

    @Override
	public java.util.List<GameState> findByProperties(GameState searchObject) {
		throw new java.lang.UnsupportedOperationException("Cannot perform this operation on an enumerable object");
	}

	@Override
	public GameState findFirstByProperties(GameState searchObject) {
		throw new java.lang.UnsupportedOperationException("Cannot perform this operation on an enumerable object");
	}

	@Override
	public java.util.Set<GameState> fetch() {
		return java.util.stream.Stream.of(GameState.values()).collect(java.util.stream.Collectors.toSet());
	}

	@Override
	public java.util.Set<GameState> fetchByName(final java.lang.String name) {
		return java.util.stream.Stream.of(GameState.values()).filter(e -> java.util.Objects.equals(e.getDywaName(), name)).collect(java.util.stream.Collectors.toSet());
	}

}
