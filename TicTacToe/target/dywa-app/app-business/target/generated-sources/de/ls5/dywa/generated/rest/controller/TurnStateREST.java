// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class TurnStateREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.TurnStateREST TurnStateREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.TurnStateController TurnStateController;


	



	public void update_TurnStateSelective(final de.ls5.dywa.generated.rest.types.TurnState value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TurnState obj = this.TurnStateController.read(value.getDywaId());
		
		this.update_TurnStateSelective(value, obj);
	}

	public void update_TurnStateSelective(final de.ls5.dywa.generated.rest.types.TurnState value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TurnState obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "TurnStateSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "TurnStateSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.TurnState effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TurnState effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isdywaDisplayNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setdywaDisplayName(effectiveValue.getdywaDisplayName());
		}
	}
	}


	private void checkVersion(final de.ls5.dywa.generated.rest.types.TurnState value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TurnState obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
