// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class TableREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.TableREST TableREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.TableController TableController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.TableRowREST TableRowREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.TableRowController TableRowController;

	public long create(final java.lang.String name) {
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj = this.TableController.create(name);
		return obj.getDywaId();
	}

	
	public de.ls5.dywa.generated.rest.types.Table read_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA(final long id) {
		
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj = this.TableController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.Table result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.Table.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA")) {
			de.ls5.dywa.generated.rest.types.GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.Table readTransient_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA(final de.ls5.dywa.generated.rest.types.Table obj) {

		final de.ls5.dywa.generated.rest.types.Table result;
		
		if (this.objectCache.containsSelective(obj, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.Table effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.Table effectiveResult = result;
					if (effectiveObj.istableRow_TableRowSet()) {
						final java.util.List<de.ls5.dywa.generated.rest.types.TableRow>
						 existing = effectiveObj.gettableRow_TableRow();
						java.util.List<de.ls5.dywa.generated.rest.types.TableRow>
						 newValue;

						newValue = new java.util.ArrayList<>(existing.size());
						for (final de.ls5.dywa.generated.rest.types.TableRow e: existing) {
							final de.ls5.dywa.generated.rest.types.TableRow fetchedValue;
						
							if (e.getDywaId() > 0) {
								// read_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA
								fetchedValue = this.TableRowREST.read_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA(e.getDywaId());
							}
							else {
								// readTransient_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA
								fetchedValue = this.TableRowREST.readTransient_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA(e);
							}
						
							newValue.add(fetchedValue);
						}

						effectiveResult.settableRow_TableRow(newValue);
						}
					}
			}

		return result;
	}

		public java.util.Set<de.ls5.dywa.generated.rest.types.Table> readAll_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table> objs =
			this.TableController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.Table> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table s : objs) {
				de.ls5.dywa.generated.rest.types.Table cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.Table.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA")) {
					de.ls5.dywa.generated.rest.types.GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}


	public void update_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA(final de.ls5.dywa.generated.rest.types.Table value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj = this.TableController.read(value.getDywaId());
		
		this.update_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA(value, obj);
	}

	public void update_GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA(final de.ls5.dywa.generated.rest.types.Table value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "GameTableSelectivex1_AzVAIWnXEe2xCJpb6ooUzA");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Table effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istableRow_TableRowSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow>
			 source = effectiveObj.gettableRow_TableRow();
			final java.util.List<de.ls5.dywa.generated.rest.types.TableRow>
			 actual = java.util.Optional.ofNullable(effectiveValue.gettableRow_TableRow()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.TableRow item : actual) {
				
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "tableRow";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = TableRowREST.create(dywaName);
					item.setDywaId(id);
				
					//update_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA
					this.TableRowREST.update_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA(item);
					entity = this.TableRowController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.TableRowREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA
					this.TableRowREST.update_GameTableRowSelectivex1x1x1_AzVAIWnXEe2xCJpb6ooUzA(item);
					entity = this.TableRowController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
	}
	public void update_TableSelective(final de.ls5.dywa.generated.rest.types.Table value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj = this.TableController.read(value.getDywaId());
		
		this.update_TableSelective(value, obj);
	}

	public void update_TableSelective(final de.ls5.dywa.generated.rest.types.Table value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "TableSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "TableSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Table effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istableRow_TableRowSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow>
			 source = effectiveObj.gettableRow_TableRow();
			final java.util.List<de.ls5.dywa.generated.rest.types.TableRow>
			 actual = java.util.Optional.ofNullable(effectiveValue.gettableRow_TableRow()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.TableRow item : actual) {
				
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "tableRow";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = TableRowREST.create(dywaName);
					item.setDywaId(id);
				
					//update_TableRowSelective
					this.TableRowREST.update_TableRowSelective(item);
					entity = this.TableRowController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.TableRowREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_TableRowSelective
					this.TableRowREST.update_TableRowSelective(item);
					entity = this.TableRowController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
	}

	public de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table copyToTransient(final de.ls5.dywa.generated.rest.types.Table value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj;

		if (this.objectCache.containsTransient(value)) {
			return this.objectCache.getTransient(value);
		}
		else {
			final java.lang.String name;
			if (value.getDywaName() == null || value.getDywaName().isEmpty()) {
				name = "Table_transient";
			} else {
				name = value.getDywaName();
			}
			obj = TableController.createTransient(name);
			this.objectCache.putTransient(value, obj);
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

			{
				final de.ls5.dywa.generated.rest.types.Table effectiveValue = value;
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.istableRow_TableRowSet()) {
				checkVersion(value, obj);

				final java.util.List<de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow>
				 source = effectiveObj.gettableRow_TableRow();
				final java.util.List<de.ls5.dywa.generated.rest.types.TableRow>
				 actual = java.util.Optional.ofNullable(effectiveValue.gettableRow_TableRow()).orElseGet(java.util.Collections::emptyList);

				for (final de.ls5.dywa.generated.rest.types.TableRow item : actual) {

					final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.TableRow entity;

					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "tableRow";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = TableRowREST.create(dywaName);
						item.setDywaId(id);
					
						//update_TableRowSelective
						this.TableRowREST.update_TableRowSelective(item);
						entity = this.TableRowController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.TableRow)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.TableRowREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_TableRowSelective
						this.TableRowREST.update_TableRowSelective(item);
						entity = this.TableRowController.read(item.getDywaId());
					}

					if (entity != null) {
						source.add(entity);
					}
				}
			}
		}

		return obj;
	}

	public void delete(final long id) {
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj = this.TableController.read(id);
		this.TableController.delete(obj);
	}

	private void checkVersion(final de.ls5.dywa.generated.rest.types.Table value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.Table obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
