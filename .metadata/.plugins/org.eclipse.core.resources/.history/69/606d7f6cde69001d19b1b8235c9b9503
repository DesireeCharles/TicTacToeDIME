// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class ConcreteUserREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.ConcreteUserREST ConcreteUserREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.ConcreteUserController ConcreteUserController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.BaseUserREST BaseUserREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.dime__HYPHEN_MINUS__models.app.BaseUserController BaseUserController;

	public long create(final java.lang.String name) {
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj = this.ConcreteUserController.create(name);
		return obj.getDywaId();
	}

	
	public de.ls5.dywa.generated.rest.types.ConcreteUser read_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw(final long id) {
		
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj = this.ConcreteUserController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.ConcreteUser result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.ConcreteUser.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw")) {
			de.ls5.dywa.generated.rest.types.PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.ConcreteUser readTransient_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw(final de.ls5.dywa.generated.rest.types.ConcreteUser obj) {

		final de.ls5.dywa.generated.rest.types.ConcreteUser result;
		
		if (this.objectCache.containsSelective(obj, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveResult = result;
					if (effectiveObj.isbaseUserSet()) {
						final de.ls5.dywa.generated.rest.types.BaseUser
						 existing = effectiveObj.getbaseUser();
						de.ls5.dywa.generated.rest.types.BaseUser
						 newValue;

						if (existing.getDywaId() > 0) {
							// read_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw
							newValue = this.BaseUserREST.read_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw(existing.getDywaId());
						}
						else {
							// readTransient_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw
							newValue = this.BaseUserREST.readTransient_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw(existing);
						}

						effectiveResult.setbaseUser(newValue);
						}
					}
			}

		return result;
	}

		public java.util.Set<de.ls5.dywa.generated.rest.types.ConcreteUser> readAll_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser> objs =
			this.ConcreteUserController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.ConcreteUser> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser s : objs) {
				de.ls5.dywa.generated.rest.types.ConcreteUser cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.ConcreteUser.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw")) {
					de.ls5.dywa.generated.rest.types.PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}


	public void update_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw(final de.ls5.dywa.generated.rest.types.ConcreteUser value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj = this.ConcreteUserController.read(value.getDywaId());
		
		this.update_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw(value, obj);
	}

	public void update_PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw(final de.ls5.dywa.generated.rest.types.ConcreteUser value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "PrivateHomeConcreteUserSelectivex1_NGHA8F4TEear0NzybbrMtw");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isbaseUserSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getbaseUser() == null) {
				effectiveObj.setbaseUser(null);
			}
			else {
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.BaseUser
				 entity;
				final de.ls5.dywa.generated.rest.types.BaseUser
				 item = effectiveValue.getbaseUser();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "baseUser";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = BaseUserREST.create(dywaName);
					item.setDywaId(id);
				
					//update_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw
					this.BaseUserREST.update_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.BaseUserREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw
					this.BaseUserREST.update_PrivateHomeBaseUserSelectivex1x1x1_NGHA8F4TEear0NzybbrMtw(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
			
				effectiveObj.setbaseUser(entity);
			
			}
		}
	}
	}
	public void update_ConcreteUserSelective(final de.ls5.dywa.generated.rest.types.ConcreteUser value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj = this.ConcreteUserController.read(value.getDywaId());
		
		this.update_ConcreteUserSelective(value, obj);
	}

	public void update_ConcreteUserSelective(final de.ls5.dywa.generated.rest.types.ConcreteUser value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "ConcreteUserSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "ConcreteUserSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isbaseUserSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getbaseUser() == null) {
				effectiveObj.setbaseUser(null);
			}
			else {
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.BaseUser
				 entity;
				final de.ls5.dywa.generated.rest.types.BaseUser
				 item = effectiveValue.getbaseUser();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "baseUser";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = BaseUserREST.create(dywaName);
					item.setDywaId(id);
				
					//update_BaseUserSelective
					this.BaseUserREST.update_BaseUserSelective(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.BaseUserREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_BaseUserSelective
					this.BaseUserREST.update_BaseUserSelective(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
			
				effectiveObj.setbaseUser(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveValue = value;
			final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isdywaSwitchedToSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getdywaSwitchedTo() == null) {
				effectiveObj.setdywaSwitchedTo(null);
			}
			else {
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser
				 entity;
				final de.ls5.dywa.generated.rest.types.ConcreteUser
				 item = effectiveValue.getdywaSwitchedTo();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.ConcreteUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "dywaSwitchedTo";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = ConcreteUserREST.create(dywaName);
					item.setDywaId(id);
				
					//update_ConcreteUserSelective
					this.ConcreteUserREST.update_ConcreteUserSelective(item);
					entity = this.ConcreteUserController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.ConcreteUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.ConcreteUserREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_ConcreteUserSelective
					this.ConcreteUserREST.update_ConcreteUserSelective(item);
					entity = this.ConcreteUserController.read(item.getDywaId());
				}
			
				effectiveObj.setdywaSwitchedTo(entity);
			
			}
		}
	}
	}

	public de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser copyToTransient(final de.ls5.dywa.generated.rest.types.ConcreteUser value) {

		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj;

		if (this.objectCache.containsTransient(value)) {
			return this.objectCache.getTransient(value);
		}
		else {
			final java.lang.String name;
			if (value.getDywaName() == null || value.getDywaName().isEmpty()) {
				name = "ConcreteUser_transient";
			} else {
				name = value.getDywaName();
			}
			obj = ConcreteUserController.createTransient(name);
			this.objectCache.putTransient(value, obj);
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

			{
				final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveValue = value;
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isbaseUserSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getbaseUser() == null) {
					effectiveObj.setbaseUser(null);
				}
				else {
					final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.BaseUser
					 entity;
					final de.ls5.dywa.generated.rest.types.BaseUser
					 item = effectiveValue.getbaseUser();
				
					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "baseUser";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = BaseUserREST.create(dywaName);
						item.setDywaId(id);
					
						//update_BaseUserSelective
						this.BaseUserREST.update_BaseUserSelective(item);
						entity = this.BaseUserController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.BaseUserREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_BaseUserSelective
						this.BaseUserREST.update_BaseUserSelective(item);
						entity = this.BaseUserController.read(item.getDywaId());
					}
				
					effectiveObj.setbaseUser(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.ConcreteUser effectiveValue = value;
				final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isdywaSwitchedToSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getdywaSwitchedTo() == null) {
					effectiveObj.setdywaSwitchedTo(null);
				}
				else {
					final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser
					 entity;
					final de.ls5.dywa.generated.rest.types.ConcreteUser
					 item = effectiveValue.getdywaSwitchedTo();
				
					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.ConcreteUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "dywaSwitchedTo";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = ConcreteUserREST.create(dywaName);
						item.setDywaId(id);
					
						//update_ConcreteUserSelective
						this.ConcreteUserREST.update_ConcreteUserSelective(item);
						entity = this.ConcreteUserController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.ConcreteUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.ConcreteUserREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_ConcreteUserSelective
						this.ConcreteUserREST.update_ConcreteUserSelective(item);
						entity = this.ConcreteUserController.read(item.getDywaId());
					}
				
					effectiveObj.setdywaSwitchedTo(entity);
				
				}
			}
		}

		return obj;
	}

	public void delete(final long id) {
		final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj = this.ConcreteUserController.read(id);
		this.ConcreteUserController.delete(obj);
	}

	private void checkVersion(final de.ls5.dywa.generated.rest.types.ConcreteUser value, final de.ls5.dywa.generated.entity.dime__HYPHEN_MINUS__models.app.ConcreteUser obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
